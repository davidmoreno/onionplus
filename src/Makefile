# Autogenerated by SCAM 0.7.0


scam-all: scam-all-subdirs scam-all-local
prefix=/usr/


#
# Now user added rules (maybe modified by scams)
#

UIC=/usr/share/qt4/bin/uic
NAME=onion
CC=g++
CXXFLAGS=-I/usr/share/qt4/include/QtCore -I/usr/share/qt4/include/QtGui -I/usr/share/qt4/include -DQT_THREAD_SUPPORT -O2 -Werror -Wall
CXX=g++
VERSION=0.0.1
LDFLAGS=-L/usr//lib -lQtNetwork
SCAM_CHECK_DEPENDS=yes
MOC=/usr/share/qt4/bin/moc
FULLNAME=onion-0.0.1
CXXFLAGS+=-O2 -g  -rdynamic
LDFLAGS+=-O2 -g -rdynamic

daemon.moc.cpp: daemon.h
	$(MOC) -o daemon.moc.cpp daemon.h


client.moc.cpp: client.h
	$(MOC) -o client.moc.cpp client.h


onion: onion.o configparser.o   modulefactory.o   modulelist.o daemon.o daemon.moc.o request.o   response.o client.moc.o client.o modules/onionmodules.a
TOTAL_COMPILE=10

.depends: 
	gcc -MM -I/usr/share/qt4/include/QtCore -I/usr/share/qt4/include/QtGui -I/usr/share/qt4/include -DQT_THREAD_SUPPORT -O2 -Werror -Wall -O2 -g  -rdynamic onion.cpp configparser.cpp modulefactory.cpp modulelist.cpp daemon.cpp request.cpp response.cpp client.cpp > .depends 2>/dev/null

include .depends

# Additional tagets by scam:
DISTBASE=.././onion-0.0.1/./src


dist: 
	rm -rf $(DISTBASE) || true
	mkdir -p $(DISTBASE)
	cp Makefile.scam $(DISTBASE)
	cp onion.cpp $(DISTBASE)
	cp configparser.cpp $(DISTBASE)
	cp configparser.h $(DISTBASE)
	cp module.h $(DISTBASE)
	cp modulefactory.cpp $(DISTBASE)
	cp modulefactory.h $(DISTBASE)
	cp modulelist.h $(DISTBASE)
	cp modulelist.cpp $(DISTBASE)
	cp daemon.cpp $(DISTBASE)
	cp daemon.h $(DISTBASE)
	cp request.cpp $(DISTBASE)
	cp request.h $(DISTBASE)
	cp response.h $(DISTBASE)
	cp response.cpp $(DISTBASE)
	cp client.h $(DISTBASE)
	cp client.cpp $(DISTBASE)
	(cd modules && make dist)
	(cd moremodules && make dist)


dist2: 
	rm -rf $(DISTBASE) || true
	mkdir -p $(DISTBASE)
	cp Makefile.scam $(DISTBASE)
	cp onion.cpp $(DISTBASE)
	cp configparser.cpp $(DISTBASE)
	cp configparser.h $(DISTBASE)
	cp module.h $(DISTBASE)
	cp modulefactory.cpp $(DISTBASE)
	cp modulefactory.h $(DISTBASE)
	cp modulelist.h $(DISTBASE)
	cp modulelist.cpp $(DISTBASE)
	cp daemon.cpp $(DISTBASE)
	cp daemon.h $(DISTBASE)
	cp request.cpp $(DISTBASE)
	cp request.h $(DISTBASE)
	cp response.h $(DISTBASE)
	cp response.cpp $(DISTBASE)
	cp client.h $(DISTBASE)
	cp client.cpp $(DISTBASE)
	(cd modules && make dist)
	(cd moremodules && make dist)


scam-all-local: onion .depends

scam-all-subdirs: 
	(cd modules && ( $(MAKE) .depends || true ) && $(MAKE) )
	(cd moremodules && ( $(MAKE) .depends || true ) && $(MAKE) )


distclean: clean
	@rm -f Makefile
	@rm -f *.pyc
	@(cd modules && $(MAKE) distclean)

	@(cd moremodules && $(MAKE) distclean)



clean: 
	@rm -rf onion
	@rm -rf daemon.moc.cpp
	@rm -rf client.moc.cpp
	@rm -rf .depends
	@rm -rf *~
	@rm -rf *.o
	@(cd modules && touch .depends && $(MAKE) clean)
	@(cd moremodules && touch .depends && $(MAKE) clean)


install: onion
	mkdir -p $(prefix)/bin
	install onion $(prefix)/bin/onion
	@(cd modules && $(MAKE) install)
	@(cd moremodules && $(MAKE) install)


uninstall: 
	rm -f $(prefix)/bin/onion
	@(cd modules && $(MAKE) uninstall)
	@(cd moremodules && $(MAKE) uninstall)

